#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass classicthesis
\use_default_options true
\maintain_unincluded_children false
\language american
\language_package default
\inputencoding default
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 0
\use_mhchem 1
\use_mathdots 1
\cite_engine natbib_numerical
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Introduction
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
What is the topic and why is it important? State the problem(s) as simply
 as you can.
 Remember that you have been working on this project for a few years, so
 you will be very close to it.
 Try to step back mentally and take a broader view of the problem.
 How does it fit into the broader world of your discipline? Especially in
 the introduction, do not overestimate the reader's familiarity with your
 topic.
 You are writing for researchers in the general area, but not all of them
 need be specialists in your particular topic.
 It may help to imagine such a person---think of some researcher whom you
 might have met at a conference for your subject, but who was working in
 a different area.
 S/he is intelligent, has the same general background, but knows little
 of the literature or tricks that apply to your particular topic.
\end_layout

\begin_layout Plain Layout
The introduction should be interesting.
 If you bore the reader here, then you are unlikely to revive his/her interest
 in the materials and methods section.
 For the first paragraph or two, tradition permits prose that is less dry
 than the scientific norm.
 If want to wax lyrical about your topic, here is the place to do it.
 Try to make the reader want to read the heavy bundle that has arrived uninvited
 on his/her desk.
 Go to the library and read several thesis introductions.
 Did any make you want to read on? Which ones were boring?
\end_layout

\begin_layout Plain Layout
This section might go through several drafts to make it read well and logically,
 while keeping it short.
 For this section, I think that it is a good idea to ask someone who is
 not a specialist to read it and to comment.
 Is it an adequate introduction? Is it easy to follow? There is an argument
 for writing this section---or least making a major revision of it---towards
 the end of the thesis writing.
 Your introduction should tell where the thesis is going, and this may become
 clearer during the writing.
\end_layout

\end_inset

 
\end_layout

\begin_layout Section
Problem statement
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
as simple and clear as possible: understanded by the audience, problems,
 preview, survey, area of study, I've looked to the following problem
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sec:problemstatement"

\end_inset

There are a lot of good API's, written in Javascript for visualising complex
 data in an attractive way.
 Javascript is a scripting language to make web content more interactive
 and attractive by adding dynamic elements.
 Visualisations can give a more clear view on the meaning of the source
 data.
 By visualising web content, a new look onto the data gives more information
 and can possible highlight information that was otherwise hard to find
 or nearly visible.
 A lot of libraries are provided for creating visualisation in JavaScript.
 An advantage is that in most cases these API's are well documented.
 The situation gets more complex when data needs to be coupled to this visualisa
tions.
 Often it is necessary to create complex multi-dimensional datastructures
 in Javascript, as illustrated in 
\begin_inset Flex CT - auto cross-reference
status collapsed

\begin_layout Plain Layout

fig:JSdatastructure
\end_layout

\end_inset

 For small data sets, this can be done manually, but for large data sets
 the task can get tricky or be a lot of work.
 The goal of this thesis is to create a webservice in JavaScript that served
 as an abstraction layer between data providers on one side and visualisation
 libraries on the other side.
 This kind of service allows to load in even large datastructures in a more
 simple way.
 Yahoo Pipes is a mashup web service which can be a data providor.
 It's an online editor to collect and filter data coming from websites,
 data sources and RSS feeds.
 It provides an easy way for data collection, filtering.
 Also the possibilities to utilise or view the data, are broad.
 In other words, the making of complex datastructures gets handled by these
 services and via an intermediating web service fetched and passed on to
 the visualisation libraries.
 In the following sections I will explain in more details why this research
 is important and how it fits into the general domain of computer science.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename gfx/js_protoviz.png
	width 100text%

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:JSdatastructure"

\end_inset

Javascript datastructure example
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Here are some examples of visualisations:
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
insert example visualisations
\end_layout

\end_inset


\end_layout

\begin_layout Section
Why is it important
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
area of study, write something on each of the topics
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
In sommige delen van de thesis staat een lijst van items; deze worden nog
 verder uitgeschreven, maar geven reeds de intentie en/of structuur aan.
\end_layout

\end_inset

test as stated in 
\begin_inset Flex CT - auto cross-reference
status collapsed

\begin_layout Plain Layout

sec:problemstatement
\end_layout

\end_inset

 or in 
\end_layout

\begin_layout Itemize
more easy access to data
\end_layout

\begin_layout Itemize
It also shows that the needs for integrating these rich data and service
 sources are rapidly increasing.
\begin_inset CommandInset citation
LatexCommand citep
key "DiLorenzo:2009:DIM:1558334.1558343"

\end_inset


\end_layout

\begin_layout Itemize
To understand why some automatic support is needed to create Mashups, we
 give the following example.
 Suppose that a user wants to implement a News Mashup that lets her select
 news on a news service like CNN International and display both the list
 of the news and a map that highlights the locations associated with the
 news; she typically needs to do a lot of programming which involves fetching
 and integrating heterogeneous data.
 In fact, the user needs to know not only how to write the code, but also
 (i) to understand the available API services in order to invoke them and
 fetch the data output; (ii) to implement screen scraping techniques for
 the services that do not provide APIs, and (iii) to know the data structure
 of the input and output of each service in order to implement a data mediation
 solution.
 The Mashup tools provide facilities to help the user solve some of the
 above mentioned problems.
 
\begin_inset CommandInset citation
LatexCommand citep
key "DiLorenzo:2009:DIM:1558334.1558343"

\end_inset


\end_layout

\begin_layout Itemize
technology gets more interesting for the 'noobs'
\end_layout

\begin_layout Itemize
A lot of visualisation libraries expect programming skills; not really necessary
 here
\end_layout

\begin_layout Itemize
more easy access to visualisation libraries; usability
\end_layout

\begin_layout Itemize
javascript is a widely used scripting language, a very poweful one
\end_layout

\begin_layout Itemize
there was not much support for complex data handling in Javascript
\end_layout

\begin_layout Itemize
moderate JSON support; but library dependent, no abstract layer
\end_layout

\begin_layout Itemize
too much information on the web; people want to filter out information;
 hacking & mashing to choose the content you like; importance of filtering
 data
\end_layout

\begin_layout Itemize
access to a great source of information; almost any information available
 can be inserted; freedom of choise
\end_layout

\begin_layout Itemize
gain more easy access to open-source and free visualisation
\end_layout

\begin_layout Standard
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
Deze tekst moet nog verfijnd worden.
 Sommige stukken kunnen ook nog een andere plaats krijgen.
\end_layout

\end_inset

This is about data and the flow of data.
 It's also about usability.
 Some kind of layer in between to technologies.
 I need to connect the dots.
 In Javascripting you can write libraries.
 What can you do with JavaScript? It a language for scripting and developing
 web applications.
 So users can write code and perform tasks more easily or have tasks automated.
 One type of libraries are visualisation libraries, by which the user can
 create charts, plots, geomaps and all others kinds of interesting visualisation
s.
 Visualisation is a widely and quite vage description.
 I shall explain it some more in detail.
 Mostly it is used when users have some kind of data that they want to represent
 in a different way.
 An important concept in developing applications is that data and visualisation
 should be two different things and also be handled seperatly.
 It's not a good solution to bind a certain type of visualisation hardcoded
 to the data.
 If you then want to have another view on the data, another font or color
 for example, it's hard to change it.
 When you seperate things, the view can be modified and choosen freely.
\end_layout

\begin_layout Standard
So in the first part you have the data, which can contain any type of data:
 text, numbers, relationships, etc..
 The size of the data also matters for the processing quality and speed.
 Large amounts of data are more difficult to handle and take more time,
 which can decrease a good user experience, for example if one has to wait
 to long for results.
 If the visualisation is added up with that, the time increases even more.
 That's a part why performance is important, the performance of the code.
 This means performance of several parts: querying data, updating data,
 creating new data structures and data views.
 This last part is in general what a visualisation library in Javascript
 is doing; it takes a set of data and creates a 'view' on this data in the
 form of a table, a chart or something else.
\end_layout

\begin_layout Standard
Let me now explain where the difficult part comes in this problem: where
 do we get the data? Mostly data is stored in databases of all sorts, online
 or offline.
 The data can be already provided in some sort of form or it can be necessary
 that the data still needs to be accquired.
 So you have two parts in the origin of the data: one, the creation of data
 and two, the handling/usage of the data.
\end_layout

\begin_layout Standard
The source for your data can be retrieved for example from the internet.
 That's were Yahoo Pipes comes in.
 It's a very handy tool to get data from the internet in all forms; web
 content, rss feed items, geolocations, csv-files.
 It is clear that the possibilities are endless, all kinds of data can be
 retrieved from the web.
 In first instance, Yahoo Pipes seems to be used for aggregating or manipulating
 RSS feeds.
 One could think of mainly text and news feeds, but it can reach further
 than that.
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Write some more here about RSS, what it is used for.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
CSV files with financial data, a lot of numbers etc..or even XML files containing
 a structured way of data with several caracteristics, maplocations, gps-coordin
ates..There are no limits on the data you can provide.
 This is a very interesting thing, but which makes everything also a lot
 more complex.
 So the input should be handled with care and parsed correctly.
 Yahoo Pipes provides a lot of good things for this.
 It has some nice functionality to handle the data correctly.
 The user than can design it's own mashup or output what they want to do
 with it.
 For example different views, filters etc can be applied on the data.
 It a little like a database where the user can query things etc..Yahoo Pipes
 is a data processor for the web.
\end_layout

\begin_layout Standard
So here's step two.
 Now that we have collected the data, what can we do with it? Like a already
 previously mentioned, Yahoo Pipes can manipulate and filter the data, even
 based on user inputs.
 So you can either just collect data in a central place of go a step further
 by manipulating.
\end_layout

\begin_layout Section
Scope
\end_layout

\begin_layout Itemize
Web API's: These services can be a data service, such as news, or a process/oper
ation service such as placing an order to Amazon.
 com.
\end_layout

\begin_layout Itemize
data handling and conversion: from text (json) to rich data (js object)
\end_layout

\begin_layout Itemize
visualisation of data; gain more insights into the data itself; new things
 can become visible; to create more attractive ways of representing data;
 telling a story trough charts, geomaps, etc..
\end_layout

\begin_layout Itemize
the web becomes more and more interactive
\end_layout

\begin_layout Section
Organization
\end_layout

\begin_layout Enumerate
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
Hoe ik mijn onderzoek georganiseerd heb
\end_layout

\end_inset

brainstorming about the project
\end_layout

\begin_layout Enumerate
brushing up javascript skills
\end_layout

\begin_layout Enumerate
which visualisation libraries are available and what can I do with them
\end_layout

\begin_layout Enumerate
research on the topic itself, what did already exists
\end_layout

\begin_layout Enumerate
defining exactly the library itself, what will be the functionality
\end_layout

\begin_layout Enumerate
implementation of the libary's functionality
\end_layout

\begin_layout Enumerate
finetuning and starting over, adapting my way of working constantly
\end_layout

\begin_layout Enumerate
improving and adding functionality
\end_layout

\begin_layout Enumerate
reporting and writing about the research
\end_layout

\begin_layout Section
Structure
\end_layout

\begin_layout Standard
Implementation to show various aspects from the research, accompanied by
 this thesis text to guide the reader trough the whole research project.
 Every sections in the thesis text adds some more information; starting
 with an introduction and the previous work, followed by my own research,
 the explanation of the implemenation and ending with the results and the
 dicussion of it, including a view into possible future work.
\end_layout

\begin_layout Section
Issues
\end_layout

\begin_layout Standard
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
Moeilijkheden die ik ben tegengekomen
\end_layout

\end_inset

The Mashup approach opens new and broad opportunities for data/services
 consumers.
 However, the development investment is still considerable.
 In fact, a Mashup user needs to know, in addition to how to write code
 using programming languages (e.g., Java Script, XML/HTML), how to use the
 different Web APIs4.
 In order to solve this problem, there is an increasing effort put into
 developing tools which are designed to support users with little programming
 knowledge in Mashup applications development.
\begin_inset CommandInset citation
LatexCommand citep
key "DiLorenzo:2009:DIM:1558334.1558343"

\end_inset


\end_layout

\begin_layout Subsection*
\begin_inset Note Note
status collapsed

\begin_layout Subsection*
Some toughts
\end_layout

\begin_layout Plain Layout
Here I want to talk about my project.
 I can call it my project, in the meaning that it has become part of myself.
 I procrastinated on it for a long time.
 It took me 3 years in fact to complete it.
 Not that I worked for 3 years.
 Most of the time has been gone doing nothing, changing subject, circumstances
 that I thought were not good.
 But it was only until recently that I got started.
 they say better late than never.
 And that is what my mission was.
 This thesis, called 'bachelorproef' is more than just a test for getting
 my bachelor degree in Computer Science.
 On this moment in time it was the greatest challenge that ever came across
 my path.
 Why it took me so long? I don't know.
 The most lessons are learned the hard way, they say.
 During the time this work had a large mental weight on me.
 Was I not good enough to complete it, would I ever complete it? My self-esteem
 and capabilities were low, I told myself for a long time.
 Until recently I noticed that change was necessary.
 I had to complete this work.
 Maybe it's some test of life for me, to see if I am capable of completing
 things or to prepare me for the life to come.
 Things that in the first place I thought were easy and would work out eventuall
y.
 But it was different, a lot different.
 Things that are worth having, don't come easy.
 And I want my bachelor degree, so I needed to complete this final task.
 And that's how this thesis slowly came to life.
\end_layout

\begin_layout Plain Layout
First I had an other subject for my thesis: RFID, which means 'Radio Frequency
 Identification Protocol'.
 I did some research on the topic.
 I spend a lot of time searching the internet and the University library
 for information.
 I found a lot of articles on the topic.
 I did some reading and searching for solutions, but never came very far.
 After that I got the message that my supportor for this thesis didn't work
 anymore at EDM
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Expertise Center for Digital Media
\end_layout

\end_inset

.
 So I was a little left behind, also my own fault because I wasn't making
 any progress.
 What I'm talking about now dates from the year after the initial assignment
 back in 2009.
 I made a lot of excuses and procrastinated a lot, in the end leading to
 no result.
 And a lot of complicated psychological situations.
 It was heavy, everytime I realised the thesis was waiting for me to get
 my hands on.
 But the time never came.
 Or I neglected the work, or I said it would all be fine in the end, or
 I did some little work and gave up, or I didn't do anything and said to
 myself that I was not capable.
 Final result: none.
\end_layout

\begin_layout Plain Layout
Until recently, which is about a couple of months ago when I came to the
 realisation that I was wasting all the work I did before to get here.
 I am in my tirth year and more than 5 years of higher education, depending
 on one assignment.
 I have to complete this.
 This degree is important for my life.
 They say sometimes a degree is not necessary, sometimes that it is a must
 nowadays.
 I not really have figured that out yet, what it means for me.
 I think time will tell what the impact is.
 But for now it matters that I get these things done and close this chapter
 of my life.
 A chapter that has been way to long and now have to be closed.
 So I got to work, more than ever before.
 I have the general habit of thinking a lot and by that I mean really a
 lot.
 My thoughts keep working against me.
 But I'm working on it to keep myself in control and focused on a positive
 outcome.
\end_layout

\begin_layout Plain Layout
That brings me in the present, where I tackeled the problem.
 I rather like the word 'challenge', looked at the circumstances and also
 my state of mind.
 Problems have a negative connotation.
 Challenges sound possible and achieveable.
 And that's were the assignement came in: 'Hacking and Mashing with Yahoo
 Pipes: Towards a new way of visualizing data.'
\end_layout

\end_inset


\end_layout

\begin_layout Section
Future Work
\end_layout

\begin_layout Standard
Improvement of the current features
\end_layout

\begin_layout Section
License/copyright
\end_layout

\end_body
\end_document
