#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass classicthesis
\use_default_options true
\maintain_unincluded_children false
\language american
\language_package default
\inputencoding default
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 0
\use_mhchem 1
\use_mathdots 1
\cite_engine natbib_numerical
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Results
\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Standard
Mashups are certainly an exciting new genre of Web applications.
 The combination of data modeling technologies stemming from the Semantic
 Web domain and the maturation of loosely-coupled, service-oriented, platform
 independent communication protocols is finally providing the infrastructure
 needed to start developing applications that can leverage and integrate
 the massive amount of information that is available on the Web.
 
\end_layout

\begin_layout Standard
Mashups are evolving toward components that are a mix of user interface
 aspects and traditional application logic where the challenge here is identifyi
ng component and composition models that can cater to the needs of both
 kinds of integration.
 One is more event-driven and user-oriented, the other is more orchestrational
 and enterprise-oriented.
 Without these elements, mashup development will largely be an ad hoc effort
 requiring programming skills that typical Web users don’t possess, or it
 will be restricted to specific technologies or domains.
\end_layout

\begin_layout Standard
There is still a lot of work to assemble open standards and reusable toolkits
 in order to support mature software development processes.
 Before mashups can make the transition from cool toys to sophisticated
 applications, much work will have to go into distilling robust standards,
 protocols, models, and toolkits.
 
\end_layout

\begin_layout Standard
In addition to the technical challenges described, social issues have (or
 will) surface as mashups become more popular.
 One of the biggest social issues facing mashup developers is the tradeoff
 between the protection of intellectual property and consumer privacy versus
 fair-use and the free flow of information.
 Unwitting content providers (targets of screen scraping), and even content
 providers who expose APIs to facilitate data retrieval might determine
 that their content is being used in a manner that they do not approve of.
\end_layout

\begin_layout Section
Future work
\end_layout

\begin_layout Standard
To improve the development for Web mashup applications, there must be considered
 some keyts in the future to improve sharing, finding, reusing and integration
 of the services.
 The first key challenge is that of semantic heterogeneity.
 This is to be considered the data itself, but also in the context of the
 services, which can present a broader form of heterogeneity.
 Web mashups are becoming very important as Web services and Web data grow.
 Efforts are still needed before we’ll be able to easily semantically connect
 existing Web applications.
\end_layout

\begin_layout Standard
It also has to be said that mashups also only have become possible because
 the infrastructure is right; client CPU's became powerful enough to run
 a significant amount of JavaScript code inside browsers and the network
 environment has become fast enough to deliver both the application logic
 and large amounts of data to the client.
\end_layout

\begin_layout Standard
Also, unlike conventional Web applications, many of today’s mashups still
 have a limited audience, such as individuals or small user groups so scalabilit
y isn’t a big issue.
 Altough this might become a problem if and when a “killer mashup” appears.
 In general, mashups are about simplicity, usability, and ease of access
 as stated before.
 This simplicity has the upper hand over feature completeness or full extensibil
ity.
 With improved tool support, such as a improved user interface toolkits
 and the abundance of components or modules, end users will be able to compose
 their own mashups.
 As mashup applications gain higher visibility, it will be interesting to
 see how the genre impacts social issues such as fair-use and intellectual
 property as well as sharing and reuse of mashup tools.
\end_layout

\end_body
\end_document
